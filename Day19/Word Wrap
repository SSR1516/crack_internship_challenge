//{ Driver Code Starts
//Initial Template for C++

#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function Template for C++

class Solution {
public:
    int solveWordWrap(vector<int> nums, int k) {
        int n = nums.size();
        vector<int> dp(n, INT_MAX);
        vector<int> cost(n, 0);
        
        for (int i = n - 1; i >= 0; i--) {
            int length = -1;
            for (int j = i; j < n; j++) {
                length += (nums[j] + 1);
                if (length > k) break;
                int extra = (j == n - 1) ? 0 : (k - length) * (k - length);
                if (j == n - 1) {
                    dp[i] = 0;
                } else if (dp[j + 1] + extra < dp[i]) {
                    dp[i] = dp[j + 1] + extra;
                }
            }
        }
        return dp[0];
    }
};


//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n, k;
        cin >> n;
        vector<int>nums(n);
        for (int i = 0; i < n; i++)cin >> nums[i];
        cin >> k;
        Solution obj;
        cout << obj.solveWordWrap(nums, k) << endl;
	}
	return 0;
}
// } Driver Code Ends
